import pandas as pd
import numpy as np
import random
from sklearn.ensemble import RandomForestClassifier
import joblib  # To load the trained model

# Mock feature extraction function
def extract_features_from_url(url):
    features = []
    # This function should return a numpy array with the same shape as your training features (F_1 to F_531)
    # For simplicity, we'll just create random features here
    # Replace this logic with your actual feature extraction code
    if 'www' not in url or 'http'not in url:# Assuming binary features
       features.append(1)
       features.extend([0 for _ in range(530)])
    else:
       features.append(0)
       features.extend([1 for _ in range(530)])
    return features

# Load the trained model (replace 'trained_model.pkl' with your actual model file)
rf_model = joblib.load('trained_model.pkl')

# Main function to test a URL
def test_url(url):
    # Step 1: Extract features from the URL
    features = extract_features_from_url(url)

    # Step 2: Predict using the trained model
    prediction = rf_model.predict([features])  # Make sure features are in the right shape (2D array)

    # Step 3: Map prediction to labels
    return 1 if prediction[0] == 1 else 0

    # Output the result
    print(f'The URL "{url}" is classified as: {label}')
    return label

# Example usage
if __name__ == "__main__":
    # You can replace this with any URL you want to test
    url = input("Enter the URL:")
    test_url(url)
